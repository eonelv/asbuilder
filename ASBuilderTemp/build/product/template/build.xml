<?xml version="1.0" encoding="utf-8"?> 
<!-- 默认执行"build"任务 -->
<project name="AppointGods" basedir="." default="build"> 
	<!--以下是需要修改的部分-->
	<property file="temp.properties"/>
	<property name="FLEX_HOME" value="D:/ASBuilder/AIRSDK4.0"/> 
    <property name="DEPLOY_DIR" location="deploy/bin"/> 
    <property name="SOURCE_DIR" location="source/src"/>
    <property name="LIB_PATH" location="swcs"/> 
	<property name="ELIB_PATH" location="source/elib"/> 
	<property name="RELEASE_PATH" location="deploy/release"/> 
	<property name="APP_NAME" value="appointgods"/> 
	<property name="APP_MAINCLASS" value="AppointGods.as"/> 
    
	
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="/usr/share/java/lib/ant-contrib-0.4.jar"/>
		</classpath>
	</taskdef>
    <taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/ant/lib/flexTasks.jar" />

    <!-- 执行清理原文档文件夹执行编译flash;然后重新生成文档 -->
    <target name="build">
        <echo>---------------清理文件夹---------------</echo>
		<antcall target="cleanbefor"/>
		<buildHandler />
		<antcall target="cleanafter"/>
    </target>
    <!--编译flash-->
    <target name="compile">
        <mxmlc
            file="${SOURCE_DIR}/${APP_MAINCLASS}"
            output="${DEPLOY_DIR}/${APP_NAME}_${MAIN_APP}.swf"
            static-rsls="false"
            accessible="true"
            debug="false">
            <!--设置源代码位置-->
            <source-path path-element="${SOURCE_DIR}"/>
			<source-path path-element="${ELIB_PATH}"/>
			<source-path path-element="source/ag"/>
            <!--指定编译的swc-->
            <library-path dir="${LIB_PATH}" includes="*">
				<include name="e1swcs.swc"/>
            </library-path>
        </mxmlc>
    </target>
	
	<target name="copy">
		<copy todir="${RELEASE_PATH}" file="${DEPLOY_DIR}/${APP_NAME}_${MAIN_APP}.swf" /> 
		<copy todir="${RELEASE_PATH}" file="${DEPLOY_DIR}/${APP_NAME}_${MAIN_APP}.enc" />
	</target>
	<target name="encrypt">
		<exec executable="encrypt.cmd" failonerror="false" dir=".">
			<arg line="${DEPLOY_DIR} ${APP_NAME}_${MAIN_APP}.swf"></arg>
		</exec>
	</target>
	<target name="filesplit">
		<exec executable="buildafter.cmd" failonerror="false" dir=".">
			<arg line="${RELEASE_PATH}/${APP_NAME}_${MAIN_APP}.enc .enc"></arg>
		</exec>
	</target>
	<target name="mail">
		<tstamp>
			<format property="date" pattern="yyyy.MM.dd" />
		</tstamp>
		<if>
			<equals arg1="${ISPATCH}" arg2="0"/>
			<then>
				<if>
					<equals arg1="${ISUPDATE}" arg2="1"/>
					<then>
						<property name="FILE_NAME" value="${PROJECT_NAME}_${PROJECT_VERSION}_${date}_${PNUMBER}.zip"/> 
					</then>
				<else>
					<property name="FILE_NAME" value="sp_${PROJECT_NAME}_${PROJECT_VERSION}_${date}_${PNUMBER}_${VERSION}_inner.zip"/> 
				</else>
				</if>
			</then>
		<else>
			<property name="FILE_NAME" value="sp_${PROJECT_NAME}_${PROJECT_VERSION}_${date}_${PNUMBER}_${VERSION}.zip"/> 
		</else>
		</if>
		<exec executable="mail.cmd" failonerror="false" dir=".">
			<arg line="1"></arg>
			<arg line="${FILE_NAME}"></arg>
			<arg line="${VERSION}"></arg>
		</exec>
	</target>
	<target name="mailf">
		<tstamp>
			<format property="date" pattern="yyyy.MM.dd" />
		</tstamp>
		<exec executable="mail.cmd" failonerror="false" dir=".">
			<arg line="0"></arg>
			<arg line="${PROJECT_NAME}_${PROJECT_VERSION}_${date}_${PNUMBER}.zip"></arg>
			<arg line="${VERSION}"></arg>
		</exec>
	</target>

	<target name="mkzip">
		<tstamp>
			<format property="date" pattern="yyyy.MM.dd" />
		</tstamp>
		<if>
			<equals arg1="${ISPATCH}" arg2="0"/>
			<then>
				<if>
					<equals arg1="${ISUPDATE}" arg2="1"/>
					<then>
						<property name="FILE_NAME" value="${PROJECT_NAME}_${PROJECT_VERSION}_${date}_${PNUMBER}.zip"/> 
						<zip basedir="${RELEASE_PATH}" zipfile="../${PROJECT_SHAR_PATH}/${FILE_NAME}"/>
					</then>
				<else>
					<property name="FILE_NAME" value="sp_${PROJECT_NAME}_${PROJECT_VERSION}_${date}_${PNUMBER}_${VERSION}_inner.zip"/> 
					<zip basedir="${RELEASE_PATH}" zipfile="../${PROJECT_SHAR_PATH}/${FILE_NAME}"/>
				</else>
				</if>
			</then>
		<else>
			<property name="FILE_NAME" value="sp_${PROJECT_NAME}_${PROJECT_VERSION}_${date}_${PNUMBER}_${VERSION}.zip"/> 
			<zip basedir="${RELEASE_PATH}" zipfile="../${PROJECT_SHAR_PATH}/${FILE_NAME}"/>
		</else>
		</if>
    </target>
	
    <target name="cleanbefor"> 
        <delete dir="${DEPLOY_DIR}"/>
        <mkdir dir="${DEPLOY_DIR}"/>
    </target> 
	<target name="cleanafter"> 
		<delete dir="${RELEASE_PATH}"/>
    </target> 
	
	
	<macrodef name="buildHandler">
		<sequential>
			<echo>正在编译代码...</echo>
			<trycatch>
				<try>
					<if>
					<equals arg1="${ISBUILD}" arg2="1"/>
					<then>
						<antcall target="compile"/>
						<antcall target="encrypt"/>
						<antcall target="copy"/>
						<antcall target="filesplit"/>
						<antcall target="mkzip"/>
						<antcall target="mail"/>
					</then>
					<else>
						<if>
						<equals arg1="${ISZIP}" arg2="1" />
						<then>
							<antcall target="mkzip"/>
							<antcall target="mailsucc"/>
							<echo message="没有更新到代码 - 将不会输出betraygods.swf" />
						</then>
						<else>
							<antcall target="mailf" />
						</else>
						</if>
					</else>
					</if>			
				</try>
				<catch>
					<if>
						<equals arg1="${ISZIP}" arg2="1" />
						<then>
							<antcall target="mkzip"/>
							<antcall target="mailzip"/>
							<echo message="代码错误编译失败了 - 将不会输出betraygods.swf" />
						</then>
						<else>
							<antcall target="mailf" />
						</else>
					</if>

				</catch>
				<finally>
					<echo>Finally!</echo>
				</finally>
			</trycatch>
		</sequential>
	</macrodef>
</project>
